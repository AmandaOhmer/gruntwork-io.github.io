- category_name: Gruntwork alternatives
  items:
    - question: Gruntwork vs the competition, at a glance
      answer: |
        <p>
          Here's a quick comparison of how Gruntwork compares to the two most common alternatives you may consider:
          doing it yourself and hiring a consultant.
        </p>
        <table class="table table-striped">
          <tr>
            <th style="width: 20%">&nbsp;</th>
            <th style="width: 26%">Do it yourself</th>
            <th style="width: 26%">Consultant</th>
            <th style="width: 26%">Gruntwork</th>
          </tr>
          <tr>
            <th>Starting point</th>
            <td>From scratch</td>
            <td>From scratch</td>
            <td>Leverage 3+ years and 300,000+ lines of battle-tested code proven in prod</td>
          </tr>
          <tr>
            <th>Time to launch</th>
            <td>3 – 12 months<br>(highly variable)</td>
            <td>3 – 12 months<br>(highly variable)</td>
            <td>1 – 5 days<br>(highly predictable)</td>
          </tr>
          <tr>
            <th>Monthly cost</th>
            <td>$16,000 – $32,000 per month<br>(2 devs, $100k – $200k / year)</td>
            <td>$32,000 – $64,000 per month<br>(2 devs, $100 – $200 / hour)</td>
            <td>$790 – $1,240 per month</td>
          </tr>
          <tr>
            <th>Docs, tests</th>
            <td>None</td>
            <td>None</td>
            <td>Thorough documentation and automated tests</td>
          </tr>
          <tr>
            <th>Maintenance</th>
            <td>None</td>
            <td>None</td>
            <td>On-going maintenance, updates, security patches</td>
          </tr>
          <tr>
            <th>Support</th>
            <td>None</td>
            <td>None</td>
            <td>Commercial support</td>
          </tr>
        </table>
        <p>
          The math is pretty simple: Gruntwork gets you results that are 10x cheaper, 10x faster, and 10x higher
          quality.
        </p>

    - question: Gruntwork vs doing it yourself (DIY)
      answer: |
        <p>
          DevOps is a classic case of "death by a thousand cuts." To ship software, there are a
          thousand little details you have to get just right—how to set up your network topology, how to run a highly
          available and scalable server cluster, how to set up CI/CD, how to configure monitoring &amp; alerting, how
          to manage secrets, and so on—and very few companies have the time, resources, or expertise to do this well.
        </p>
        <p>
          At Gruntwork, we've already created all the infrastructure you need. In fact, if you hired a team of
          DevOps experts and had them do nothing but work on your infrastructure for several years, you'd most likely
          end up with code that looks almost exactly like the <a href="/infrastructure-as-code-library/">Infrastructure
          as Code Library</a> and <a href="/reference-architecture/">Reference Architecture</a>. But why waste all that
          time reinventing the wheel? For a fraction of the cost of a single full-time developer, you can get access to
          a library of proven, battle-tested code, as well as support, updates, and maintenance. You focus on your
          product; let us take care of the grunt work.
        </p>

    - question: Gruntwork vs consulting companies
      answer: |
        <p>
          Most consulting companies are focused on one thing: billable hours. They build everything from scratch for
          every customer, so the code is completely unproven, the timeline is unpredictable, projects stretch on for
          months, and costs spiral out of control. And when the whole thing is done, you're left with a bunch of code
          someone else wrote, typically with no documentation and tests, and no way to ask questions without paying
          even more money.
        </p>
        <p>
          At Gruntwork, our focus is on creating reusable, high quality infrastructure code, such as the
          <a href="/infrastructure-as-code-library/">Infrastructure as Code Library</a> and <a href="/reference-architecture/">Reference Architecture</a>.
          Because all the code is <i>already written</i>, we can get you up and running 10-100x faster than a
          consulting company (typically in just a single day!) on top of code that is thoroughly documented, tested,
          and has been proven in production at dozens of other customer deployments. We do all of this for a price
          that's a tiny fraction of what consultants charge, and we provide commercial support, maintenance, and
          updates for our work over the long term.
        </p>

    - question: Gruntwork vs Platform as a Service (PaaS) and Infrastructure as a Service (IaaS)
      answer: |
        <p>
          A Platform as a Service (PaaS) such as Heroku or Docker Cloud can be a great way to get started, as they
          hide all the infrastructure details from you, and provide a simple API for deploying your code. Unfortunately,
          for this very same reason, a PaaS tends to be a big bottleneck as you try to grow: without the ability to
          see and control the underlying infrastructure details, it becomes difficult to debug, scale, customize your
          infrastructure, and keep costs under control.
        </p>
        <p>
          As a result, most software companies eventually migrate to an Infrastructure as a Service provider (IaaS)
          such as AWS, Google Cloud, or Azure. This gives you full control over your infrastructure, but the downside
          is a massive increase in complexity. Suddenly, you have to deal with thousands of little infrastructure
          details—how to set up your network topology, how to run a highly available and scalable server cluster, how
          to set up CI/CD, how to configure monitoring &amp; alerting, how to manage secrets, and so on—and very few
          companies have the time, resources, or expertise to do this well.
        </p>
        <p>
          Our goal at Gruntwork is to allow you to take advantage of the full control and power of an IaaS while still
          having the ease-of-use of a PaaS. By using the <a href="/infrastructure-as-code-library/">Infrastructure as Code Library</a>, you get a
          simple API for complicated infrastructure; for example, you can deploy a Kafka cluster or configure CI/CD
          or even deploy your entire <a href="/reference-architecture/">Architecture</a> in just a few lines of code.
          And since all of this infrastructure is backed by code, you can easily debug, scale, and customize things
          as much as you want.
        </p>

    - question: Gruntwork vs open source modules (e.g. Ansible Galaxy, Terraform Module Registry, Puppet Forge, etc.)
      answer: |
        <p>
          You can find open source infrastructure code in registries such as Ansible Galaxy, Terraform Module Registry,
          Puppet Forge, and Chef Marketplace. So why use a paid, commercial product such as the
          <a href="/infrastructure-as-code-library/">Infrastructure as Code Library</a> instead of this open source code?
        </p>
        <p>
          First, we love open source at Gruntwork, and parts of our Infrastructure as Code Library actually are open source (e.g.,
          look for our Consul, Nomad, and Vault modules in the Terraform Module Registry), so it's not an
          either-or-choice! Second, if your business depends on this infrastructure code, here are some reasons you
          should consider a commercial partner like Gruntwork in addition to using open source:
        </p>
        <table class="table table-striped">
          <tbody>
            <tr>
              <th style="width: 20%">Maintenance</th>
              <td>
                Most of the open source modules are not well maintained. Technologies like Terraform, Docker, and AWS
                are changing constantly, and the creators of those modules rarely have any incentive to invest the
                large amount of time necessary to keep that code up to date. At Gruntwork, keeping up with these
                changes is the core of our business, so we regularly update and maintain all the code in the Infrastructure as Code
                Library.
              </td>
            </tr>
            <tr>
              <th style="width: 20%">Testing</th>
              <td>
                The open source modules almost never have automated tests. As a result, many of them are buggy or
                don't work at all. Every module in the Infrastructure as Code Library is thoroughly tested. After every single
                commit, we kick off a suite of automated tests that deploy the code into a real AWS account and
                verify that it behaves as expected.
              </td>
            </tr>
            <tr>
              <th style="width: 20%">Integration</th>
              <td>
                The modules in the Infrastructure as Code Library are all designed to be highly configurable, composable, and to
                work together. In fact, we even offer the <a href="/reference-architecture/">Reference Architecture</a>,
                which is a battle-tested, end-to-end tech stack for AWS that we can customize to your needs and deploy
                into your AWS accounts in about one day. With open source code, all the integration work is up to you,
                and you'll find many of the modules are too inflexible to fit your needs or incompatible with other modules.
              </td>
            </tr>
            <tr>
              <th style="width: 20%">Support</th>
              <td>
                With <a href="/support/">Gruntwork Support</a>, you get commercial support for all the
                code in the Infrastructure as Code Library. We're there to help you via email, chat, and phone/video call any time
                you need a bug fixed, or help with troubleshooting, or a code or design review. With open source code,
                if something goes wrong, you're typically on your own.
              </td>
            </tr>
          </tbody>
        </table>


- category_name: Contract &amp; Licensing
  items:

    - question: What's included with each Gruntwork user license?
      answer: |
        <p>
          When you become a <a href="/pricing/">Gruntwork Subscriber</a>, each user license will allow one human or
          machine user to access our <a href="/infrastructure-as-code-library/">Infrastructure as Code Library</a>,
          <a href="/training/">DevOps Training Library</a>, <a href="/houston/">Gruntwork Houston</a>, and our paid support
          services. In addition, a user license allows a user to fork and modify the code and create derivative works as
          much as you want.
        </p>

    - question: Can I try Gruntwork Software before committing to an annual contract?
      answer: |
        <p>
          Here are three ways you can try out Gruntwork Software with no commitment:
          <ol>
            <li>You can try out parts of the IaC Library for free by checking out our <a href="/infrastructure-as-code-library/#open-source" title="Free Open Source modules by Gruntwork">open source modules</a>.</li>
            <li>Before any contracts are signed, we'd be happy to do a walkthrough of our code, training, and process.</li>
            <li>We offer a 30-day money-back guarantee, so if for any reason you're not happy after signing up, we'll refund 100% of your money in the first 30 days. Check out "<a href="/faq/#what-if-i-want-to-cancel-my-gruntwork-subscription" title="What if I want to cancel my Gruntwork Subscription?">What if I want to cancel my Gruntwork Subscription?</a>" for more info.</li>
          </ol>
        </p>

    - question: What if I want to use the code with my own customers?
      answer: |
        <p>
          The Gruntwork Subscription is valid for <i>one</i> company to use to manage its own infrastructure. If you
          are an agency or reseller that manages infrastructure for other companies, please
          <a href="/contact/">contact us</a> to discuss licensing options.
        </p>

    - question: How can I modify your Terms of Service?
      answer: |
        <p>
          We recommend that most customers go through our normal checkout flow and accept our standard
          <a href="/terms/" title="Gruntwork Terms of Service">Terms of Service</a>. Customized Terms of Service are only
          available for "Enterprise Subscriptions", which require a purchase of at least 20 users and include other
          benefits such as a faster Service Level Agreement and additional support. If you wish to customize the Terms of
          Service, you can download our Terms of Service as a <a href="/assets/msword/gruntwork-terms.docx">Microsoft Word Document</a>.
        </p>

- category_name: Pricing
  items:
    - question: Is an annual subscription required?
      answer: |
        <p>
          The Gruntwork Subscription requires an annual contract (note: billing is monthly) because we give customers access to all the code in the IaC Library, and we let you keep that code even if you cancel. If we didn't have the annual contract requirement, customers could sign up for one day, get access to all the code, and cancel immediately. The Dedicated Support Plan doesn't have these issues, so it's a monthly contract with no annual commitment required.
        </p>
        <p>
          However, we offer a 30-day money back guarantee, so if for any reason you're not happy after signing up, we'll let you out of the annual contract and refund 100% of your money in the first 30 days. Check out "<a href="/faq/#what-if-i-want-to-cancel-my-gruntwork-subscription" title="What if I want to cancel my Gruntwork Subscription?">What if I want to cancel my Gruntwork Subscription?</a>" for more info.
        </p>

    - question: What if I want to cancel my Gruntwork Subscription?
      answer: |
        <p>
          We offer a 30-day money-back guarantee. You can try out the Gruntwork Subscription, Dedicated Support, and the Reference Architecture, and if you're not happy for any reason, you can cancel within the first 30 days, and we'll let you out of the annual contract and refund 100% of your money.
        </p>
        <p>
          Note that if you cancel in the first 30 days, you lose the license to the code in the Infrastructure as Code Library, so you must stop using it and delete any references to it; on the other hand, if you do stick with the annual subscription, and cancel after at least one year, you'll be allowed to keep all the code you had up to that point. See "<a href="/faq/#what-happens-to-my-code-if-i-cancel-my-subscription" title="What happens to my code if I cancel my subscription?">What happens to my code if I cancel my subscription?</a>" for more info.
        </p>

    - question: What happens to my code if I cancel my subscription?
      answer: |
        <p>
          If you cancel within the first 30 days, we'll refund 100% of your money and let you out of the annual contract, but you lose the license to the code in the Infrastructure as Code Library, so you must stop using it and delete all copies of the code.
        </p>
        <p>
          However, if you remain a subscriber for more than 30 days, the license allows you to fork and modify the code and create derivative works as much as you want, and even if you cancel your subscription, you can keep using the code you had up to that point. After canceling, you'll have one month to make copies of all the repos in the Infrastructure as Code Library into your own version control system, after which you'll no longer have access to the updates, additions, and fixes we make to the Infrastructure as Code Library, Houston, support from the Gruntwork team, security alerts, and any other subscription benefits. However, your infrastructure will continue to work just fine and you'll still have all the code you were using up to that point, so there is <strong>no lock-in whatsoever</strong>.
        </p>

    - question: What payment options do you accept?
      answer: |
        <p>
          For monthly billing, we require automated payments via credit card or ACH transfer. If you wish to use invoices and pay by wire transfer or check instead, you must do annual billing.
        </p>

- category_name: Infrastructure as Code Library
  items:
    - question: What do I do if I need infrastructure that isn't in the Infrastructure as Code Library?
      answer: |
        <p>
          If the infrastructure you need is something general-purpose that applies to many companies (i.e., isn't a
          custom, one-off project completely unique to your company), we'd be happy to build it, add it to the
          Infrastructure as Code Library, and provide support, maintenance, and updates for it long-term! For example, we're
          currently looking into adding ElasticSearch, Kubernetes, and DataDog to our Library and are looking for
          companies willing to fund those projects. See <a href="/custom-module-development/">Custom Module Development</a>
          for more info.
        </p>
